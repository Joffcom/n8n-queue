version: '3.8'
services:
  n8n:
    image: docker.n8n.io/n8nio/n8n:next
    restart: always
    ports:
      - "5678:5678"
    environment:
      - EXECUTIONS_MODE=queue
      - QUEUE_BULL_REDIS_HOST=redis
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_DATABASE=n8ndb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_USER=n8n_user
      - DB_POSTGRESDB_PASSWORD=n8n_passwd
    volumes:
      - n8n_data:/home/node/.n8n
    depends_on:
      - redis
      - postgres
    links:
      - postgres
      - redis


  n8n-worker1:
    image: docker.n8n.io/n8nio/n8n:next
    restart: always
    command: worker
    environment:
      - EXECUTIONS_MODE=queue
      - QUEUE_BULL_REDIS_HOST=redis
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_DATABASE=n8ndb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_USER=n8n_user
      - DB_POSTGRESDB_PASSWORD=n8n_passwd
    links:
      - postgres
      - redis
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy

  
  n8n-worker2:
    image: docker.n8n.io/n8nio/n8n:next
    restart: always
    command: worker
    environment:
      - EXECUTIONS_MODE=queue
      - QUEUE_BULL_REDIS_HOST=redis
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_DATABASE=n8ndb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_USER=n8n_user
      - DB_POSTGRESDB_PASSWORD=n8n_passwd
    links:
      - postgres
      - redis
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
  
  postgres:
    image: postgres:16
    restart: always
    environment:
      - POSTGRES_USER=n8n_user
      - POSTGRES_PASSWORD=n8n_passwd
      - POSTGRES_DB=n8ndb
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -h localhost -U n8n_user -d n8n_passwd']
      interval: 5s
      timeout: 5s
      retries: 10

  redis:
    image: redis:6-alpine
    restart: always
    volumes:
      - redis_data:/data
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 5s
      timeout: 5s
      retries: 10

volumes:
  n8n_data:
  postgres_data:
  redis_data:

